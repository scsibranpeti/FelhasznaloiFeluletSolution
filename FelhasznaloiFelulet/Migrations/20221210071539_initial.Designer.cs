// <auto-generated />
using System;
using FelhasznaloiFelulet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FelhasznaloiFelulet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221210071539_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FelhasznaloiFelulet.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("FelhasznaloiFelulet.Models.Bank", b =>
                {
                    b.Property<string>("Swift")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Swift");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("FelhasznaloiFelulet.Models.Countries", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CountryTel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isEU")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("FelhasznaloiFelulet.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("BankSwift")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mobile")
                        .HasColumnType("int");

                    b.Property<int>("UserAddressID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BankSwift");

                    b.HasIndex("UserAddressID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FelhasznaloiFelulet.Models.Address", b =>
                {
                    b.HasOne("FelhasznaloiFelulet.Models.Countries", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FelhasznaloiFelulet.Models.Users", b =>
                {
                    b.HasOne("FelhasznaloiFelulet.Models.Bank", "UserBank")
                        .WithMany()
                        .HasForeignKey("BankSwift");

                    b.HasOne("FelhasznaloiFelulet.Models.Address", "UserAddress")
                        .WithMany()
                        .HasForeignKey("UserAddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAddress");

                    b.Navigation("UserBank");
                });
#pragma warning restore 612, 618
        }
    }
}
